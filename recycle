#!/bin/bash



#So if you messed up the command execution it tells you how to do it the right way
usage() {
    echo "usage: recycle [-rvi] file ..." >&2
    exit 1
}


#Check if the file is the recycle script to WE DO NOT RECYCLE THE RECYCLE INNIT
check_recycle_script() {
	local file="$1"
	local real_path
   	real_path=$(realpath "$file" 2>/dev/null)
   	local script_path
    	script_path=$(realpath "$0")
    	if [ "$real_path" = "$script_path" ]; then
        	echo "Attempting to delete recycle â€“ operation aborted" >&2
        	exit 1
    	fi
}

process_file() {
	local file="$1"
    	local interactive="$2"
    	local verbose="$3"

    	# Check if file exists
    	if [ ! -e "$file" ]; then
        	echo "recycle: cannot remove '$file': No such file or directory" >&2
        	return 1
    	fi

    	# Check if it's a directory
    	if [ -d "$file" ] && [ "$recursive" != "yes" ]; then
        	echo "recycle: cannot remove '$file': Is a directory" >&2
        	return 1
    	fi

    	# Check if it's the recycle script
    	check_recycle_script "$file"

    	# Interactive mode
    	if [ "$interactive" = "yes" ]; then
        	read -p "remove $file? " answer
        	case "$answer" in
           		[yY]*) ;;
            		*) return 0 ;;
        	esac
    	fi

    	# Handle regular files or recursive directory processing
    	if [ -f "$file" ]; then
        	local inode
	        inode=$(ls -i "$file" | awk '{print $1}')
        	local basename
        	basename=$(basename "$file")
        	local recycle_name="${basename}_${inode}"
        	local abs_path
	      	abs_path=$(realpath "$file")

        # Move to recyclebin
        mv "$file" "$HOME/recyclebin/$recycle_name"

        # Update .restore.info
        echo "$recycle_name:$abs_path" >> "$HOME/.restore.info"

        # Verbose output
        [ "$verbose" = "yes" ] && echo "removed '$file'"
    elif [ -d "$file" ] && [ "$recursive" = "yes" ]; then
        # Process directory recursively
	find "$file" -type f -print0 | while IFS= read -r -d '' f; do
            process_file "$f" "$interactive" "$verbose"
        done
        # Remove empty directory
        rmdir "$file" 2>/dev/null
        [ "$verbose" = "yes" ] && echo "removed directory '$file'"
    fi
}

mkdir -p "$HOME/recyclebin" || {
    echo "recycle: cannot create recyclebin directory" >&2
    exit 1
}


#option flags variable placeholder for tf y/n value
recursive="no"
interactive="no"
verbose="no"

while getopts ":rvi" opt; do
	case $opt in
		r) recursive="yes" ;;
		v) verbose="yes" ;;
		i) interactive ;;
		\?) echo "recycle: invalid option: -$OPTARG" >&2 usage ;;
	esac
done
shift $((OPTIND-1))

#check for no arg
if [ $# -eq 0 ]; then
	echo "recycle: missing arguments" >&2
	usage
fi

#process each file
for file in "$@"; do
	if [[ "$file" == *[*?]* ]]; then
		for f in $file; do
			process_file "$f" "$interactive" "$verbose"
		done
	else
		process_file "$file" "$interactive" "$verbose"
	fi
done

exit 0
